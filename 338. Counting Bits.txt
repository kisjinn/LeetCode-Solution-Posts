You can find my Solution here: https://leetcode.com/problems/counting-bits/solutions/3989116/easy-java-solution/


Approach
1.i=1 Binary representation=01
ans[1]=ans[0]+1 =1

2.i=2 Binary representation=010
ans[1]=ans[1]+0 =1

3.i=3 Binary representation=011
ans[1]=ans[1]+1 =2

4.i=4 Binary representation=0100
ans[1]=ans[0]+0 =0

5.i=5 Binary representation=0101
ans[1]=ans[1]+ 1=1+1=2
.
.
.
14.i=14 Binary representation=1110
ans[1]=ans[111]+ (1110 & 0001) = ans[7]+0=3+0=3

Complexity
Time complexity:O(n)

Space complexity:O(1)

Code
class Solution {
    public int[] countBits(int n) {
    int[] ans = new int[n + 1];
    
    for (int i = 1; i <= n; i++) {
        // Using the bit manipulation trick: ans[i] = ans[i >> 1] + (i & 1)
        ans[i] = ans[i >> 1] + (i & 1);
    }
    
    return ans;
}
}