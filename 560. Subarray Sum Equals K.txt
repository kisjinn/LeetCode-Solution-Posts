if map contains diff=curreSum-k that means subarray with sum k exist
if map contains curreSum=k that means subarray from(0 to i) is present with sum==k

class Solution {
    public int subarraySum(int[] nums, int k) {
        //Hashmap to store prefix sum
        HashMap<Integer, Integer> mp=new  HashMap<Integer, Integer>();
        int curreSum=0;
        int count=0;
        for(int i=0;i<nums.length;i++){
          curreSum=curreSum+nums[i];
          if(curreSum==k){
              count++;
          }
          if(mp.containsKey(curreSum-k)){
              count+=mp.get(curreSum-k);
          }
  
         mp.put(curreSum, mp.getOrDefault(curreSum, 0) + 1);

          
        }
        
        return count;
    
    }
}


Given an array of integers nums and an integer k, return the total number of subarrays whose sum equals to k.

A subarray is a contiguous non-empty sequence of elements within an array.

 

Example 1:

Input: nums = [1,1,1], k = 2
Output: 2
Example 2:

Input: nums = [1,2,3], k = 3
Output: 2
 

Constraints:

1 <= nums.length <= 2 * 104
-1000 <= nums[i] <= 1000
-107 <= k <= 107
     
        